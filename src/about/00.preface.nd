title: foreword
type: about
order: 0
---

We wrote this book to help you understand the power and significance of reactive pro- gramming in JavaScript and develop the skills to put RxJS to work.

FROM PAUL: Like many skills, RxJS was not something I had originally set out to learn but instead something I stumbled on and continued in, only because of a confluence of events. Earlier in my programming career, I had been working on a new UI system for an internal tool in which the project owner had given me a large degree of latitude regarding what technologies I employed. Because the only constraint was that it be written in .NET, I was introduced to Rx.NET first while trying to build out various UI interactions. During and after my college years, my experience had been primarily of an object-oriented nature. I understood the singleton pattern, the decorator, the adapter, and others, and I had heard of a fabled programming paradigm that focused - seemingly counterintuitively - on functions. But to me, that seemed entirely backward. Ignoring the larger context involved, I happily plugged the new library into my application, thinking it a simple substitute for the existing . NET event system.

On a later project, where I was first starting to really cut my teeth with JavaScript, I thought back to the library I had used that made my event management so much eas- ier, and I went looking for a parallel in JavaScript. Lo and behold, RxJS entered my life! At first, I happily plugged it in wherever I could, seeing it simply as a way to replace the ugliness of event callbacks. The full breadth of what could be accom- plished with RxJS and the benefits of reactive, functional programming dawned slowly. It started with the gift of a book from a family member on Clojure, which gave me some insight into this mystical functional world. It expanded as I looked more into asynchronous patterns and saw the parallels in other asynchronous structures like promises.

It was around this time, as I became more involved in the community of RxJS (pri- marily through contributions to the open source library back in the old days of RxJS 2!), that Manning approached me about the possibility of writing a book on RxJS. It was to be a rather large undertaking, especially for me as a first-time author. But it pre- sented me with the ability to give back to the overall community in a way that hadn’t been available when I started learning Rx, because most of the resources focused pri- marily on Rx. NET. And I was lucky enough to have Luis join me on the project, mak- ing it less daunting.

FROM LUIS: I came across RxJS a couple of years ago, while studying monads in func- tional programming. The realization that the two were intimately related opened my eyes to new and different ways of designing APIs. I instantly fell in love with it. So I began using RxJS as an orchestration layer to consume information from different remote services and feed user interfaces an object, easy to digest, containing all the information that needed to be displayed.

I wanted others to learn about RxJS, so I decided to end my first book, Functional Programming in JavaScript, with a section on reactive programming and RxJS observ- ables. But my passion didn’t stop there. A couple of months later, Manning approached me and I was privileged to pair up with Paul, who I found to be an incred- ibly talented engineer, to coauthor this book. And just like that, I was again writing about my two favorite topics - JavaScript and functional programming.
